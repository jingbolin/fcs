package ${package.Controller};

import org.springframework.http.MediaType;

#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

import ${package.Entity}.${entity};
import ${package.Service}.${table.serviceName};
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end
#if(${providerClassPackage})
import ${providerClassPackage};
#end

/**
 * 控制器类
 * ${table.comment}
 *
 * @author ${author}
 * @date ${date}
 * @since 1.8
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
#if(${cfg.RequestMappingPrefix})
@RequestMapping("/${cfg.RequestMappingPrefix}/${table.entityPath}")
#else
@RequestMapping("/${table.entityPath}")
#end
@Api(value = "${table.comment}接口")
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass}<${entity}, ${table.serviceName}> {
#else
public class ${table.controllerName} {
#end

    @ApiOperation(value = "查询${table.comment}", produces = MediaType.APPLICATION_JSON_VALUE)
    @PostMapping(value = "/query/list")
    public Object query(@RequestBody(required = false) ${entity} entity, @RequestParam(defaultValue = "1") Integer pageNumber, @RequestParam(defaultValue = "10") Integer pageSize) {
        Pagination<${entity}> data = service.query(Objects.nonNull(entity) ? entity : new ${entity}(), new Pagination<>(pageNumber, pageSize));
        return setSuccessModelMap(data);
    }

    @ApiOperation(value = "${table.comment}详情", produces = MediaType.APPLICATION_JSON_VALUE)
    @PostMapping(value = "/query/detail")
    public Object queryById(@RequestParam Long id) {
        ${entity} data = service.queryById(id);
        return setSuccessModelMap(data);
    }
    
    @ApiOperation(value = "查询${table.comment}", produces = MediaType.APPLICATION_JSON_VALUE)
    @PostMapping(value = "/queryByIds")
    public Object queryByIds(@RequestBody(required = false) List<Long> ids) {
        List<${entity}> data = service.queryList(ids);
        return setSuccessModelMap(data);
    }

    @ApiOperation(value = "新增/修改${table.comment}", produces = MediaType.APPLICATION_JSON_VALUE)
    @PostMapping(value = "/saveOrUpdate")
    public Object saveOrUpdate(@RequestBody ${entity} entity) {
        service.update(entity);
        return setSuccessModelMap();
    }

    @ApiOperation(value = "批量'新增/修改'${table.comment}", produces = MediaType.APPLICATION_JSON_VALUE)
    @PostMapping(value = "/saveOrUpdateBatch")
    public Object saveOrUpdateBatch(@RequestBody List<${entity}> entityList) {
        service.updateBatch(entityList);
        return setSuccessModelMap();
    }

    @ApiOperation(value = "删除${table.comment}", produces = MediaType.APPLICATION_JSON_VALUE)
    @PostMapping(value = "/delete")
    public Object delete(@RequestParam Long id) {
        service.delete(id);
        return setSuccessModelMap();
    }
    
    @ApiOperation(value = "批量删除${table.comment}", produces = MediaType.APPLICATION_JSON_VALUE)
    @PostMapping(value = "/deleteByIds")
    public Object deleteByIds(@RequestBody List<Long> ids) {
        ids.forEach(service::delete);
        return setSuccessModelMap();
    }

    // @ApiOperation(value = "批量删除${table.comment}", produces = MediaType.APPLICATION_JSON_VALUE)
    // @PostMapping(value = "/deleteByEntity")
    // public Object deleteByEntity(@RequestBody ${entity} entity) {
    //     service.deleteByEntity(entity);
    //     return setSuccessModelMap();
    // }
}
